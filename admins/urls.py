from django.urls import path, include
from . import views
from django.contrib.auth.views import LoginView, LogoutView
from django.contrib.auth.decorators import login_required, user_passes_test


urlpatterns = [
    path('', user_passes_test(lambda u: u.is_superuser,
         login_url='login_admin')(views.home), name='home'),
    path('articles', user_passes_test(lambda u: u.is_superuser, login_url='login_admin')(
        views.ArticlesList.as_view()), name='articles_list'),
    path('articles/create', user_passes_test(lambda u: u.is_superuser,
         login_url='login_admin')(views.ArticleCreateView.as_view()), name='articles_create'),
    path('articles/<int:pk>/edit', user_passes_test(lambda u: u.is_superuser,
         login_url='login_admin')(views.ArticleUpdate.as_view()), name='articles_edit'),
    path('langs', user_passes_test(lambda u: u.is_superuser, login_url='login_admin')(
        views.LangsList.as_view()), name='langs_list'),
    path('langs/create', user_passes_test(lambda u: u.is_superuser,
         login_url='login_admin')(views.LngCreateView.as_view()), name='create_lang'),
    path('langs/<int:pk>/edit', user_passes_test(lambda u: u.is_superuser,
         login_url='login_admin')(views.LangsUpdate.as_view()), name='lang_update'),
    path('langs/delete', user_passes_test(lambda u: u.is_superuser,
         login_url='login_admin')(views.delete_langs), name='lang_del'),
    path("site_infos", user_passes_test(lambda u: u.is_superuser,
         login_url='login_admin')(views.StaticUpdate.as_view()), name='static_info'),
    path('images/save', user_passes_test(lambda u: u.is_superuser,
         login_url='login_admin')(views.save_images), name='images_save'),
    path("images/delete", user_passes_test(lambda u: u.is_superuser,
         login_url='login_admin')(views.delete_image), name='del-img'),
    path('translations', user_passes_test(lambda u: u.is_superuser, login_url='login_admin')(
        views.TranslationList.as_view()), name='translation_list'),
    path("translations/<int:pk>", user_passes_test(lambda u: u.is_superuser, login_url='login_admin')
         (views.TranslationGroupDetail.as_view()), name='transl_group_detail'),
    path('translation/edit', user_passes_test(lambda u: u.is_superuser,
         login_url='login_admin')(views.translation_update), name='translation_edit'),
    path("translations/<int:pk>/edit", user_passes_test(lambda u: u.is_superuser,
         login_url='login_admin')(views.TranslationGroupUdpate.as_view()), name='transl_group_edit'),
    path("translation_group/create", user_passes_test(lambda u: u.is_superuser,
         login_url='login_admin')(views.add_trans_group), name='transl_group_create'),
    path('article_categories', user_passes_test(lambda u: u.is_superuser,
         login_url='login_admin')(views.ArticleCtgList.as_view()), name='article_ctg_list'),
    path('article_categories/create', user_passes_test(lambda u: u.is_superuser,
         login_url='login_admin')(views.AddArticleCtg.as_view()), name='add_acticle_ctg'),
    path("article_categories/<int:pk>/edit", user_passes_test(lambda u: u.is_superuser,
         login_url='login_admin')(views.ArticleCtgEdit.as_view()), name='article_ctg_update'),
    path("delete", user_passes_test(lambda u: u.is_superuser,
         login_url='login_admin')(views.delete_item), name='delete'),
    path("lang_icon_delete", user_passes_test(lambda u: u.is_superuser,
         login_url='login_admin')(views.del_lang_icon), name='lang_icon_del'),
    path("add_static_image", user_passes_test(lambda u: u.is_superuser,
         login_url='login_admin')(views.add_static_image), name='add_static_logos'),
    path("delete_static_image", user_passes_test(lambda u: u.is_superuser,
         login_url='login_admin')(views.del_statics_image), name='del_static_image'),
    path('delete_article_ctg_images', user_passes_test(lambda u: u.is_superuser,
         login_url='login_admin')(views.delete_article_group_img), name='art_ctg_image_del'),
    path('login', LoginView.as_view(
        template_name='admin/sing-in.html',
        success_url='/admin/',
    ), name='login_admin'),
    path('logout', views.logout_view, name='logout_url'),
    path('admins', user_passes_test(lambda u: u.is_superuser, login_url='login_admin')(
        views.AdminsList.as_view()), name='admin_list'),
    path("admins/create", user_passes_test(lambda u: u.is_superuser,
         login_url='login_admin')(views.AdminCreate.as_view()), name='admins_create'),
    path("admins/<int:pk>/edit", user_passes_test(lambda u: u.is_superuser,
         login_url='login_admin')(views.AdminUpdate.as_view()), name='admins_edit'),
    path("delete_article_image", user_passes_test(lambda u: u.is_superuser,
         login_url='login_admin')(views.delete_article_image), name='del_article_img'),
    path("partners", user_passes_test(lambda u: u.is_superuser, login_url='login_admin')(views.PartnersList.as_view()), name='partners_list'),
    path("partners/create", user_passes_test(lambda u: u.is_superuser, login_url='login_admin')(views.PartnersCreate.as_view()), name='partners_create'),
    path("partners/<int:pk>/edit", user_passes_test(lambda u: u.is_superuser, login_url='login_admin')(views.PartnersEdit.as_view()), name='partners_edit'),
    path('quick_applications', user_passes_test(lambda u: u.is_superuser, login_url='login_admin')(views.ShortApplicationList.as_view()), name='short_aplic_list'),
    path('quick_applications/<int:pk>/edit', user_passes_test(lambda u: u.is_superuser, login_url='login_admin')(views.ShortApplicationUpdate.as_view()), name='short_aplic_edit'),
    path("faq", views.FAQlist.as_view(), name='faq_list'),
    path("faq/create", views.FAQcreate.as_view(), name='faq_create'),
    path("faq/<int:pk>/edit", views.FAQupdate.as_view(), name='faq_edit'),
    path('partner_image_delete', views.delete_partner_image, name='del_partner_img'),
    path('services', user_passes_test(lambda u: u.is_superuser, login_url='login_admin')(views.ServicesList.as_view()), name='services'),
    path("services/create", user_passes_test(lambda u: u.is_superuser, login_url='login_admin')(views.ServicesCreate.as_view()), name='services_create'),
    path("services/<int:pk>/edit", user_passes_test(lambda u: u.is_superuser, login_url='login_admin')(views.ServicesUpdate.as_view()), name='services_update'),
    path("delete_service_image", user_passes_test(lambda u: u.is_superuser, login_url='login_admin')(views.del_sev_image), name='del_serv_image'),
    path("reviews", user_passes_test(lambda u: u.is_superuser, login_url='login_admin')(
        views.ReviewsList.as_view()), name='review_list'),
     path("reviews/create", user_passes_test(lambda u: u.is_superuser,
         login_url='login_admin')(views.ReviewsCreate.as_view()), name='review_create'),
     path('reviews/<int:pk>/edit', user_passes_test(lambda u: u.is_superuser,
         login_url='login_admin')(views.ReviewsUpdate.as_view()), name='review_edit'),
     path('delete_review_image', user_passes_test(lambda u: u.is_superuser,
         login_url='login_admin')(views.delete_review_image), name='del_review_image'),
    path("delete_project_img", views.delete_proj_files, name='del_proj_img'),
    path("projects", views.ProjectsList.as_view(), name='projects_list'),
    path("projects/create", views.ProdjectsCreate.as_view(), name='projects_create'),
    path("projects/<int:pk>/edit", views.ProjectsUpdate.as_view(), name='projects_edit')
    #path("fill_db_qwertyuiop", user_passes_test(lambda u: u.is_superuser, login_url='login_admin')(views.fill_db_view))
]
